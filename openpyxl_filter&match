# This is the codebook for using filter and match in openpyxl
# -------- PRE-EXERCISE --------
# -------- EXERCISE 1 -------
  # 假设工作簿对象为wb，工作表对象为ws，如果要获取上图表格中表头的值:
  # 通过ws['A1'].value，ws['B1'].value和ws['C1'].value获取。
  # 通过for cell in ws[1]:获取单元格对象，再使用cell.value获得单元格的值。
  # 通过for row in 工作表对象.iter_rows(max_row=1, values_only=True):获取。
# ------- EXERCISE 2 --------
  # [工号,姓名,部门,基本工资]
  # 计算出基本工资的总和并打印
  
from openpyxl import load_workbook

# 打开【pre_practice2.xlsx】工作簿
wb = load_workbook('./codes/material/pre_practice2.xlsx')
# 获取活动工作表
ws = wb.active

sum = 0

# 获取基本工资（D）列的数据（不包含表头），并计算总和
for row in ws.iter_rows(min_row=2, values_only=True):
#row[3]就是第四格
    sum += row[3]

# 打印输出结果
print('表格中员工的基本工资总和是：{}'.format(sum))

# -------- PART 1 --------
# -------- Using filter --------
  # worksheet:
  #[工号，姓名，部门，迟到时间（分钟），迟到次数]

from openpyxl import load_workbook, Workbook

# 打开【10月考勤统计.xlsx】工作簿
wb = load_workbook('./material/10月考勤统计.xlsx')
# 获取活动工作表
ws = wb.active

# 创建一个空的列表late_header用来保存表头数据
late_header = []
# 使用for循环遍历出了工作表的第一行（表头），然后将获取到的单元格对象的值（表头的值）存入列表中
for cell in ws[1]:
    late_header.append(cell.value)

# 新建工作簿
new_wb = Workbook()
# 获取新工作簿中的工作表
new_ws = new_wb.active

# 将表头写入新工作簿的工作表中
new_ws.append(late_header)

# 从第二行开始遍历表格
for row in ws.iter_rows(min_row=2, values_only=True):
    # 取出姓名，迟到时间和迟到次数
    name = row[1]
    time = row[3]
    number = row[-1]
    # 判断是否迟到
    if time > 45 and number > 3:
        print('{}迟到了{}分钟，迟到了{}次'.format(name, time, number))
        # 将迟到人员信息写入新工作簿的工作表中
        new_ws.append(row)

# 将新工作簿保存为【10月迟到人员信息.xlsx】
new_wb.save('./material/10月迟到人员信息.xlsx')

# -------- EXERCISE 1 --------
# Here we have one more filter condition: department

from openpyxl import load_workbook, Workbook

# 打开【10月考勤统计.xlsx】工作簿
wb = load_workbook('./material/10月考勤统计.xlsx')
# 获取活动工作表
ws = wb.active

# 获取表头
late_header = []
for cell in ws[1]:
    late_header.append(cell.value)

# 新建工作簿
new_wb = Workbook()
# 获取新工作簿中的工作表
new_ws = new_wb.active

# 将表头写入新工作簿的工作表中
new_ws.append(late_header)

# 从第二行开始遍历表格
for row in ws.iter_rows(min_row=2, values_only=True):
    # 取出姓名，部门，迟到时间和迟到次数
    name = row[1]
    department = row[2]
    time = row[3]
    number = row[-1]
    # 判断是否迟到
    if department == '人力资源部' and time > 45 and number > 3:
        print('人力资源部的{}迟到了{}分钟，迟到了{}次'.format(name, time, number))
        # 将迟到人员信息写入新工作簿的工作表中
        new_ws.append(row)
        
# 将新工作簿保存为【10月迟到人员信息.xlsx】
new_wb.save('./material/人力资源部10月迟到人员信息.xlsx')

# -------- PART 2 --------
# -------- Matching data --------
  # dataset:
  # 10月考核统计:
  # [工号，姓名，部门，迟到时间，迟到次数]
  # 迟到次数月度统计（10月更新）：
  # [工号，姓名，部门，1月，2月，……12月]

  # 理清思路：
  # 需要获取【10月考勤统计.xlsx】和【迟到次数月度统计（10月更新）.xlsx】中需要匹配的数据，至少要包括工号与迟到次数这两列数据。
  
from openpyxl import load_workbook

# 打开工作簿【10月考勤统计.xlsx】，获取活动工作表
wb = load_workbook('./material/10月考勤统计.xlsx')
ws = wb.active

# 创建迟到人员字典
info_dict = {}

# 循环读取除表头外的表格数据
for row in ws.iter_rows(min_row=2, values_only=True):
    # 取出员工工号
    staff_id = row[0]
    # 取出迟到次数
    staff_late = row[-1]
    # 将信息添加入字典，字典格式为{'员工工号': '迟到次数'}；字典可以很好地体现出工号与迟到次数的对应关系，即{'工号': '迟到次数'}
    info_dict[staff_id] = staff_late

# 打开工作簿【迟到次数月度统计（10月更新）.xlsx】，获取活动工作表
monthly_wb = load_workbook('./material/迟到次数月度统计（10月更新）.xlsx')
monthly_ws = monthly_wb.active

# 循环读取出表头外的表格数据
for monthly_row in monthly_ws.iter_rows(min_row=3, max_col=13, values_only=True):
    # 取出员工工号
    member_id = monthly_row[0]
    # 取出十一月份的迟到次数
    member_late = monthly_row[-1]
    # 匹配迟到次数是否相等
    if member_late != info_dict[member_id]:
        print('工号{}迟到情况不匹配，请核查后更新'.format(member_id))

# -------- EXERCISE 2 --------
  # dataset:
  # 11月考核统计:
  # [工号，姓名，部门，迟到时间，迟到次数]
  # 迟到次数月度统计（11月更新）：
  # [工号，姓名，部门，1月，2月，……12月]
  # Prompt：看看【11月迟到人员信息.xlsx】和【迟到次数月度统计（11月更新）.xlsx】中迟到次数是否一致。
from openpyxl import load_workbook

# 打开工作簿【11月考勤统计.xlsx】，获取活动工作表
wb = load_workbook('./material/11月考勤统计.xlsx')
ws = wb.active

# 创建迟到人员字典
info_dict = {}

# 循环读取除表头外的表格数据
for row in ws.iter_rows(min_row=2, values_only=True):
    # 取出员工工号
    staff_id = row[0]
    # 取出迟到次数
    staff_late = row[-1]
    # 将信息添加入字典，字典格式为{'员工工号': '迟到次数'}
    info_dict[staff_id] = staff_late

# 打开工作簿【迟到次数月度统计（11月更新）.xlsx】，获取活动工作表
monthly_wb = load_workbook('./material/迟到次数月度统计（11月更新）.xlsx')
monthly_ws = monthly_wb.active

# 循环读取出表头外的表格数据
for monthly_row in monthly_ws.iter_rows(min_row=3, max_col=14, values_only=True):
    # 取出员工工号
    member_id = monthly_row[0]
    # 取出十一月份的迟到次数
    member_late = monthly_row[-1]
    # 匹配迟到次数是否相等
    if member_late != info_dict[member_id]:
        print('工号{}迟到情况不匹配，请核查后更新'.format(member_id))
